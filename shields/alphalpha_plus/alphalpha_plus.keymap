#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#define DEFAULT 0
#define LOWER   2
#define LOWERLOWER   3
#define PLEB 1

&mt {
    tapping-term-ms = <500>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_ret {
            timeout-ms = <50>;
            key-positions = <19 18 32>;
            bindings = <&kp RET>;
        };
        combo_cmma {
            timeout-ms = <50>;
            key-positions = <10 16>;
            bindings = <&kp CMMA>;
        };
        combo_dot {
            timeout-ms = <50>;
            key-positions = <10 17>;
            bindings = <&kp DOT>;
        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };
};

/ {

behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp K_COPY >, <&kp K_PASTE>;
        };
        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp K_UNDO >, <&kp K_REDO>;
        };
    };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
// -----------------------------------------------------------------------------------------
// |  W   |  L   |  Y   |  P   |  T   |   Y   |  U    |  I   |  O   |   P   |
// |  A   |  S   |  D   |  F   |  G   |   H   |  J    |  K   |  L   |   ;   |
//      |  Z   |  X   |  C   |  V   |  B   |   N   |  M    |  ,   |  .   |
//                         | LOWR |     SPACE    |  RAIS |
      bindings = <
  &kp W    &kp L &kp Y &kp P &kp K  &kp Z   &kp X  &kp O    &kp U   &kp SEMI
  &hm LSHIFT C    &kp R &kp S &kp T &kp B  &kp F   &kp N  &kp E    &kp I   &hm RSHIFT A
      &mt LCTL PSCRN  &kp J &kp V &kp D &kp G  &kp Q   &kp M  &kp H &td0
                &mo 2 &kp SPC &kp SPC &kp SPC &kp SPC &kp SPC &kp LGUI
      >;
    };

    plebs_layer {
      bindings = <
      &kp Q    &kp W &kp E &kp R &kp T  &kp Y   &kp U  &kp I    &kp O   &kp P
      &kp A    &kp S &kp D &kp F &kp G  &kp H   &kp J  &kp K    &kp L   &kp SEMI
          &mt LCTL PSCRN   &kp Z &kp X &kp C &kp V  &kp B   &kp N  &kp M &td0
                  &mo 2 &trans &trans &kp SPC &trans &trans &kp LALT
      >;
    };

    lower_layer {
      bindings = <
      &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5 &kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0
      &trans    &kp TAB &kp S &mo LOWERLOWER &tog PLEB  &kp BKSP   &kp LBKT &kp RBKT &kp SQT &kp BSLH
          &bt BT_NXT &bt BT_SEL 0 &bt BT_CLR &out OUT_TOG &kp GRAVE  &kp MINUS   &kp EQUAL  &kp FSLH &td1
                              &trans &trans &trans &kp LSHIFT &trans &trans &kp TILDE
      >;
    };

    lower_lower_layer {
        bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
        &kp F11 &kp F12 &trans &trans &trans  &trans   &kp LARW  &kp DARW    &kp UARW   &kp RARW
            &trans  &trans &trans &trans &trans  &trans  &trans  &trans &bootloader
                              &trans  &trans &trans &kp LALT &trans &trans &trans
        >;
      };

  };
};
